{"version":3,"sources":["components/App.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","redux/contacts/contacts-type.js","components/App.jsx","redux/contacts/contacts-action.js","redux/store.js","redux/contacts/contacts-reducer.js","index.js"],"names":["Container","styled","div","Input","button","input","ContactStyledList","ul","P","p","DeleteButton","Form","props","useState","name","setName","number","setNumber","handleChange","event","target","value","reset","onSubmit","preventDefault","onChange","type","pattern","title","required","Filter","ContactList","contacts","deleteContact","map","id","onClick","App","dispatch","useDispatch","useSelector","state","contactList","filter","contsctInfo","find","alert","actionTypes","payload","uuidv4","AddContact","normalizedFilter","toLowerCase","includes","findContact","RemoveContact","FilterContact","currentTarget","rootReduser","combineReducers","contact","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.886cc190.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\nexport const Container = styled.div`\r\npadding:50px\r\n`;\r\nexport const Button = styled.button`\r\nmargin: 20px;\r\npadding: 10px;\r\npadding-right:20px;\r\npadding-left: 20px;\r\n`;\r\nexport const Input = styled.input`\r\nmargin-left:10px\r\n`;\r\nexport const ContactStyledList = styled.ul`\r\npadding-inline-start:0px;\r\nlist-style-type: none;`\r\n\r\nexport const P = styled.p`\r\nfont-size: 20px;\r\ndisplay:inline-block;\r\nmargin:0px;`\r\nexport const DeleteButton = styled.button`\r\nmargin-left:10px;\r\nbackground-color:black;\r\ncolor:white;\r\nborder:0px;\r\ncursor:pointer;\r\n`","import React, { useState  } from 'react';\r\nimport {Input} from '../App.styled.jsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Form(props) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  \r\n  \r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    props.onSubmit({name, number})\r\n    reset()\r\n  }\r\n  const reset = () => {\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n    \r\n  return (<form onSubmit={handleSubmit}>\r\n    <lable> Name\r\n      <Input\r\n        value={name}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \r\n        Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required />\r\n    </lable>\r\n    <lable> Number\r\n      <Input\r\n        value={number}\r\n        onChange={handleChange}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, \r\n        круглые скобки и может начинаться с +\" required />\r\n    </lable>\r\n    <button type=\"submit\">Add contact</button>\r\n  </form>)\r\n}\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired\r\n}","import React from 'react';\r\n\r\n const Filter = ({ value, onChange }) => (\r\n   <label>\r\n    <h3>Find contact by Name</h3>\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;","import React from 'react';\r\nimport { ContactStyledList, P, DeleteButton } from '../App.styled.jsx';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <ContactStyledList>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n             <P>{name}:</P> <P>{number}</P>\r\n        <DeleteButton\r\n          type=\"button\"\r\n          onClick={() => deleteContact(id)}>Delete\r\n        </DeleteButton>\r\n      </li>\r\n    ))}\r\n  </ContactStyledList>\r\n);\r\n\r\nexport default ContactList;","\r\nconst ADDCONTACTS = 'AddContact';\r\nconst REMOVECONTACTS = 'RemoveContact';\r\nconst FILTERCONTACTS = 'FilterContact';\r\nexport default {ADDCONTACTS, REMOVECONTACTS,FILTERCONTACTS }","import React from 'react';\nimport { Container} from './App.styled.jsx';\nimport Form from './Form/Form';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport { AddContact,RemoveContact,FilterContact } from '../redux/contacts/contacts-action.js'\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const contacts = useSelector((state) => state.contactList)\n  const filter = useSelector((state) => state.filter)\n  const addContact = contsctInfo => {\n  const isNameExist = contacts.find(({ name }) => contsctInfo.name === name);\n        if (isNameExist) {\n          alert(`${contsctInfo.name}is already in contacts`);\n          return\n      }\n    dispatch(AddContact({\n      name: contsctInfo.name,\n      number: contsctInfo.number\n    }))\n  }\n  const deleteContact = id => {\n    dispatch(RemoveContact(id))\n  }\n  const changeFilter = event => {\n    dispatch(FilterContact(event.currentTarget.value))\n  }\n  const findContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(normalizedFilter),\n    );\n    return filteredContacts\n  };\n    return (\n      <Container >\n        <h2>PhoneBook</h2>\n        <Form onSubmit={addContact} />\n        <h2>Contacts</h2>\n        <ContactList contacts={findContact()} deleteContact={deleteContact} />\n        <Filter onChange={changeFilter} />\n      </Container>\n    )\n}\n","import { v4 as uuidv4 } from 'uuid';\r\nimport actionTypes from './contacts-type'\r\n\r\nexport const AddContact = ({ name, number }) => ({\r\n    type: actionTypes.ADDCONTACTS,\r\n    payload: { name,number, id:uuidv4() },\r\n})\r\nexport const RemoveContact = id => ({\r\n    type: actionTypes.REMOVECONTACTS,\r\n    payload: id ,\r\n})\r\nexport const FilterContact = filter => ({\r\n    type: actionTypes.FILTERCONTACTS,\r\n    payload: filter  \r\n})\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {contactListReducer,filterReducer} from './contacts/contacts-reducer'\r\n\r\nconst rootReduser = combineReducers({\r\n    contactList: contactListReducer,\r\n    filter:filterReducer\r\n})\r\n\r\nconst store = createStore(rootReduser, composeWithDevTools());\r\nexport default store;\r\n","import actionTypes from './contacts-type'\r\n\r\nexport const contactListReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case actionTypes.ADDCONTACTS: \r\n            return  [...state, payload];\r\n        case actionTypes.REMOVECONTACTS:\r\n            return  (state.filter(contact => contact.id !== payload)) ;\r\n        default: return state;\r\n    }\r\n};\r\nexport const filterReducer = (state = '', { type, payload }) => {\r\n    switch (type) {\r\n        case actionTypes.FILTERCONTACTS:\r\n            return payload ;\r\n        default: return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport store from './redux/store.js'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n   <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}