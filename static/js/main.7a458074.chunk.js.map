{"version":3,"sources":["components/App.styled.jsx","redux/contacts/contacts-action.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Input","button","input","ContactStyledList","ul","P","p","DeleteButton","AddContact","createAction","payload","name","number","id","uuidv4","RemoveContact","FilterContact","Form","props","dispatch","useDispatch","contacts","useSelector","state","contactList","useState","setName","setNumber","handleChange","event","target","value","reset","onSubmit","preventDefault","find","contact","alert","onChange","type","pattern","title","required","Filter","currentTarget","ContactList","deleteContact","map","onClick","App","filter","normalizedFilter","toLowerCase","includes","findContact","contactListReducer","createReducer","filterReducer","_","persistConfig","key","storage","blacklist","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7a458074.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\nexport const Container = styled.div`\r\npadding:50px\r\n`;\r\nexport const Button = styled.button`\r\nmargin: 20px;\r\npadding: 10px;\r\npadding-right:20px;\r\npadding-left: 20px;\r\n`;\r\nexport const Input = styled.input`\r\nmargin-left:10px\r\n`;\r\nexport const ContactStyledList = styled.ul`\r\npadding-inline-start:0px;\r\nlist-style-type: none;`\r\n\r\nexport const P = styled.p`\r\nfont-size: 20px;\r\ndisplay:inline-block;\r\nmargin:0px;`\r\nexport const DeleteButton = styled.button`\r\nmargin-left:10px;\r\nbackground-color:black;\r\ncolor:white;\r\nborder:0px;\r\ncursor:pointer;\r\n`","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const AddContact = createAction('AddContact', ({ name, number }) => ({\r\n    payload: { name, number, id: uuidv4() }\r\n}));\r\nexport const RemoveContact = createAction('RemoveContact');\r\nexport const FilterContact = createAction('FilterContact');\r\n","import React, { useState  } from 'react';\r\nimport {Input} from '../App.styled.jsx';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AddContact } from '../../redux/contacts/contacts-action.js'\r\n\r\nexport default function Form(props) {\r\n  const dispatch = useDispatch()\r\n  const contacts = useSelector((state) => state.contactList)\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  \r\n  \r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  \r\n  const addContact = event => {\r\n    event.preventDefault()\r\n  const isNameExist = contacts.find(contact => contact.name === name);\r\n        if (isNameExist) {\r\n          alert(`${name}is already in contacts`);\r\n          return\r\n      }\r\n    dispatch(AddContact({\r\n      name: name,\r\n      number: number\r\n    }))\r\n    reset()\r\n  }\r\n\r\n  const reset = () => {\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n    \r\n  return (<form onSubmit={addContact}>\r\n    <lable> Name\r\n      <Input\r\n        value={name}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \r\n        Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required />\r\n    </lable>\r\n    <lable> Number\r\n      <Input\r\n        value={number}\r\n        onChange={handleChange}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, \r\n        круглые скобки и может начинаться с +\" required />\r\n    </lable>\r\n    <button type=\"submit\">Add contact</button>\r\n  </form>)\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FilterContact } from '../../redux/contacts/contacts-action.js'\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch()\r\n  const changeFilter = event => {\r\n    dispatch(FilterContact(event.currentTarget.value))\r\n  }\r\n    return <>\r\n    <label>\r\n      <h3>Find contact by Name</h3>\r\n      <input type=\"text\" onChange={changeFilter} />\r\n    </label> </>\r\n}","import React from 'react';\r\nimport { ContactStyledList, P, DeleteButton } from '../App.styled.jsx';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <ContactStyledList>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n             <P>{name}:</P> <P>{number}</P>\r\n        <DeleteButton\r\n          type=\"button\"\r\n          onClick={() => deleteContact(id)}>Delete\r\n        </DeleteButton>\r\n      </li>\r\n    ))}\r\n  </ContactStyledList>\r\n);\r\n\r\nexport default ContactList;","import React from 'react';\nimport { Container} from './App.styled.jsx';\nimport Form from './Form/Form';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport { RemoveContact } from '../redux/contacts/contacts-action.js'\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const contacts = useSelector((state) => state.contactList)\n  const filter = useSelector((state) => state.filter)\n\n  const deleteContact = id => {\n    dispatch(RemoveContact(id))\n  }\n\n  const findContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(normalizedFilter),\n    );\n    return filteredContacts\n  };\n  \n    return (\n      <Container >\n        <h2>PhoneBook</h2>\n        <Form/>\n        <h2>Contacts</h2>\n        <ContactList contacts={findContact()} deleteContact={deleteContact} />\n        <Filter/>\n      </Container>\n    )\n}\n","import { AddContact, RemoveContact,FilterContact} from './contacts-action'\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const contactListReducer = createReducer([], {\r\n    [AddContact]: (state, {payload}) => [...state, payload],\r\n    [RemoveContact]: (state, {payload})=> state.filter(contact => contact.id !== payload),\r\n})\r\n\r\nexport const filterReducer = createReducer('', {\r\n    [FilterContact]: (_, {payload}) => payload,\r\n})\r\n\r\n","import { persistStore, persistReducer } from 'redux-persist'\r\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport { contactListReducer, filterReducer } from './contacts/contacts-reducer'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n    storage,\r\n  blacklist: ['filter']\r\n}\r\nconst rootReducer = combineReducers({\r\n    contactList: contactListReducer,\r\n    filter:filterReducer\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    devTools:process.env.NODE_ENV === 'development',\r\n});\r\n\r\nlet persistor = persistStore(store)\r\n \r\nexport default { store, persistor};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport store from './redux/store.js'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n    <App />\n  </PersistGate>\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}